{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { AckDate, method as xDate } from \"./date\";\nexport { AckDate } from \"./date\";\nexport var monthLcaseNameArray = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n\nvar Month = function (_super) {\n  __extends(Month, _super);\n\n  function Month(num) {\n    var _this = _super.call(this) || this;\n\n    _this.monthLcaseNameArray = monthLcaseNameArray;\n\n    if (num != null) {\n      _this.setStartDate(num);\n    }\n\n    return _this;\n  }\n\n  Month.prototype.setStartDate = function (date) {\n    var jDate = xDate();\n\n    if (!jDate.isDate(date)) {\n      var num = Number(date);\n\n      if (!isNaN(num)) {\n        date = xDate().now().setDate(1).setMonth(date).date;\n      } else {\n        var i = this.getMonthIndexByString(date);\n        date = xDate(new Date()).setDate(1).setMonth(i + 1).date;\n      }\n    }\n\n    this.date = date;\n    return this;\n  };\n\n  Month.prototype.getMonthIndexByString = function (mon) {\n    return monthLcaseNameArray.indexOf(mon.toLowerCase());\n  };\n\n  Month.prototype.StartDate = function (isClone) {\n    var startDate = !isClone ? this.getStartDate() : this.getStartDate();\n    return xDate(startDate);\n  };\n\n  Month.prototype.xDate = function () {\n    return xDate(this.getStartDate());\n  };\n\n  Month.prototype.getStartDate = function () {\n    if (this.date) return this.date;\n    this.date = new Date(new Date().setDate(1));\n    return this;\n  };\n\n  Month.prototype.setEndDate = function (date) {\n    if (!xDate(date).isDate() && !isNaN(date)) this.endDate = xDate(new Date()).setMonth(date).getLastDateOfMonth();else this.endDate = date;\n    return this;\n  };\n\n  Month.prototype.getEndDate = function () {\n    if (this.endDate) return this.endDate;\n    var d = '12/31/' + this.getYear();\n    this.endDate = new Date(d);\n    return this.endDate;\n  };\n\n  return Month;\n}(AckDate);\n\nexport { Month };\nexport function method(num) {\n  return new Month(num);\n}","map":null,"metadata":{},"sourceType":"module"}