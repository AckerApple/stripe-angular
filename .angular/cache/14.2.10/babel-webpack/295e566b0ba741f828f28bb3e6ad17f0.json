{"ast":null,"code":"import { method as xDate } from \"./date\";\n\nvar ackYear = function () {\n  function ackYear(yyyy) {\n    this.getMonth = this.month;\n    this.getWeek = this.week;\n    this.year = this.getYear;\n    if (yyyy != null) this.setStartDate(yyyy);\n    return this;\n  }\n\n  ackYear.prototype.setStartDate = function (date) {\n    var isObject = typeof date == 'object',\n        isYearString = !isObject && !isNaN(Number(date)),\n        isYear = isYearString || !xDate(date).isDate() && !isNaN(date);\n\n    if (isYear) {\n      date = new Date(new Date('1/1/2011').setFullYear(date));\n    }\n\n    this.date = date;\n    return this;\n  };\n\n  ackYear.prototype.getStartDate = function () {\n    if (this.date) return this.date;\n    var d = '1/1/' + xDate(new Date()).year();\n    this.date = new Date(d);\n    return this.date;\n  };\n\n  ackYear.prototype.setEndDate = function (date) {\n    if (!xDate(date).isDate() && !isNaN(date)) this.date = new Date('12/31/' + date);else this.date = date;\n    return this;\n  };\n\n  ackYear.prototype.getEndDate = function () {\n    if (this.endDate) return this.endDate;\n    var d = '12/31/' + this.getYear();\n    this.endDate = new Date(d);\n    return this.endDate;\n  };\n\n  ackYear.prototype.StartDate = function (isClone) {\n    var startDate = !isClone ? this.getStartDate() : this.getStartDate();\n    return xDate(startDate);\n  };\n\n  ackYear.prototype.xDate = function () {\n    return xDate(this.getStartDate());\n  };\n\n  ackYear.prototype.month = function () {\n    return this.StartDate().month();\n  };\n\n  ackYear.prototype.week = function () {\n    return this.StartDate().week();\n  };\n\n  ackYear.prototype.getYear = function () {\n    var d = this.getStartDate();\n    return xDate(d).year();\n  };\n\n  ackYear.prototype.setYear = function (yyyy) {\n    var ExYy = xDate(yyyy);\n    if (isNaN(yyyy) && ExYy.isDate()) yyyy = ExYy.year();\n    var date = this.getStartDate();\n    date = new Date(date.setFullYear(yyyy));\n    this.setStartDate(date);\n    return this;\n  };\n\n  ackYear.prototype.getDateOfLastWeekday = function () {\n    var d = this.getStartDate(),\n        addAmount = -xDate(d).dayOfWeek() + 6,\n        dateA = new Date(d.setDate(d.getDate() + addAmount));\n    dateA = new Date(dateA.setHours(23));\n    dateA = new Date(dateA.setMinutes(59));\n    dateA = new Date(dateA.setSeconds(59));\n    return dateA;\n  };\n\n  return ackYear;\n}();\n\nexport { ackYear };\nexport function method(path) {\n  return new ackYear(path);\n}","map":null,"metadata":{},"sourceType":"module"}