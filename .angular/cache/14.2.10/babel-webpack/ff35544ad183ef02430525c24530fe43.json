{"ast":null,"code":"var ExString = function () {\n  function ExString(string) {\n    this.string = string;\n    return this;\n  }\n\n  ExString.prototype.isEmail = function () {\n    return this.string.search(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/) >= 0;\n  };\n\n  ExString.prototype.repeat = function (num) {\n    var x,\n        s = '';\n\n    for (x = 0; x < num; ++x) s = s + this.string;\n\n    return s;\n  };\n\n  ExString.prototype.htmlFormat = function () {\n    var v = this.string;\n    v = v.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    return v;\n  };\n\n  ExString.prototype.toBase64 = function () {\n    var e = this._utf8_encode();\n\n    var t = \"\";\n    var n, r, i, s, o, u, a;\n    var f = 0;\n\n    while (f < e.length) {\n      n = e.charCodeAt(f++);\n      r = e.charCodeAt(f++);\n      i = e.charCodeAt(f++);\n      s = n >> 2;\n      o = (n & 3) << 4 | r >> 4;\n      u = (r & 15) << 2 | i >> 6;\n      a = i & 63;\n\n      if (isNaN(r)) {\n        u = a = 64;\n      } else if (isNaN(i)) {\n        a = 64;\n      }\n\n      t = t + ExString._keyStr.charAt(s) + ExString._keyStr.charAt(o) + ExString._keyStr.charAt(u) + ExString._keyStr.charAt(a);\n    }\n\n    return t;\n  };\n\n  ExString.prototype._utf8_encode = function () {\n    var e = this.string.replace ? this.string : this.string.toString();\n    e = e.replace(/\\r\\n/g, \"\\n\");\n    var t = \"\";\n\n    for (var n = 0; n < e.length; n++) {\n      var r = e.charCodeAt(n);\n\n      if (r < 128) {\n        t += String.fromCharCode(r);\n      } else if (r > 127 && r < 2048) {\n        t += String.fromCharCode(r >> 6 | 192);\n        t += String.fromCharCode(r & 63 | 128);\n      } else {\n        t += String.fromCharCode(r >> 12 | 224);\n        t += String.fromCharCode(r >> 6 & 63 | 128);\n        t += String.fromCharCode(r & 63 | 128);\n      }\n    }\n\n    return t;\n  };\n\n  ExString.prototype.toHex = function (encType) {\n    encType = encType || 'hex';\n    return new Buffer(this.string, encType).toString('hex');\n  };\n\n  ExString.prototype.toBinary = function (encType) {\n    encType = encType || 'binary';\n    return new Buffer(this.string, encType);\n  };\n\n  ExString._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  return ExString;\n}();\n\nexport { ExString };\nexport function method(variable) {\n  return new ExString(variable);\n}","map":null,"metadata":{},"sourceType":"module"}