{"ast":null,"code":"var jXBase64 = function () {\n  function jXBase64(base64) {\n    this.base64 = base64;\n    return this;\n  }\n\n  jXBase64.prototype.toString = function (e) {\n    var e = this.base64.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n    var t = \"\";\n    var n, r, i;\n    var s, o, u, a;\n    var f = 0;\n\n    while (f < e.length) {\n      s = jXBase64._keyStr.indexOf(e.charAt(f++));\n      o = jXBase64._keyStr.indexOf(e.charAt(f++));\n      u = jXBase64._keyStr.indexOf(e.charAt(f++));\n      a = jXBase64._keyStr.indexOf(e.charAt(f++));\n      n = s << 2 | o >> 4;\n      r = (o & 15) << 4 | u >> 2;\n      i = (u & 3) << 6 | a;\n      t = t + String.fromCharCode(n);\n\n      if (u != 64) {\n        t = t + String.fromCharCode(r);\n      }\n\n      if (a != 64) {\n        t = t + String.fromCharCode(i);\n      }\n    }\n\n    t = this._utf8_decode(t);\n    return t;\n  };\n\n  jXBase64.prototype._utf8_decode = function (e) {\n    var t = \"\";\n    var n = 0;\n    var r = 0,\n        c2 = 0,\n        c3 = 0;\n\n    while (n < e.length) {\n      r = e.charCodeAt(n);\n\n      if (r < 128) {\n        t += String.fromCharCode(r);\n        n++;\n      } else if (r > 191 && r < 224) {\n        c2 = e.charCodeAt(n + 1);\n        t += String.fromCharCode((r & 31) << 6 | c2 & 63);\n        n += 2;\n      } else {\n        c2 = e.charCodeAt(n + 1);\n        c3 = e.charCodeAt(n + 2);\n        t += String.fromCharCode((r & 15) << 12 | (c2 & 63) << 6 | c3 & 63);\n        n += 3;\n      }\n    }\n\n    return t;\n  };\n\n  jXBase64._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  return jXBase64;\n}();\n\nexport { jXBase64 };\nexport function method(variable) {\n  return new jXBase64(variable);\n}","map":null,"metadata":{},"sourceType":"module"}