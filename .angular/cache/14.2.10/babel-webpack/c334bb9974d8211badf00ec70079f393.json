{"ast":null,"code":"var jXNumber = function () {\n  function jXNumber(number) {\n    this.number = number;\n    return this;\n  }\n\n  jXNumber.prototype.getSuffix = function () {\n    return this.number == null ? '' : suffixByNumber(this.number);\n  };\n\n  jXNumber.prototype.decimalFormat = function (p) {\n    p = p == null ? 2 : p;\n    var m = Math.pow(10, p),\n        n = this.number;\n    return (Math.round(n * m) / m).toFixed(p);\n  };\n\n  jXNumber.prototype.asMinutesToDateTime = function (options) {\n    options = options || {};\n    var minute = this.number;\n    var iDate = options.date || new Date();\n    var date = new Date(iDate.getFullYear(), iDate.getMonth(), iDate.getDate(), 0, minute);\n    return date;\n  };\n\n  jXNumber.prototype.asMinutesToTime = function (options) {\n    options = options || {};\n    options.timeDelim = options.timeDelim || ':';\n    options.dayPeriodDelim = options.dayPeriodDelim || ' ';\n    var d = this.asMinutesToDateTime(options);\n    var hour = d.getHours();\n    var tt = 'AM';\n    var mins = d.getMinutes();\n\n    if (hour > 12) {\n      tt = 'PM';\n      hour = hour - 12;\n    }\n\n    mins = mins.toString().length == 1 ? '0' + mins : mins;\n    return hour + options.timeDelim + mins + options.dayPeriodDelim + tt;\n  };\n\n  return jXNumber;\n}();\n\nexport { jXNumber };\nexport function suffixByNumber(i) {\n  if (!i) return '';\n  var j = i % 10,\n      k = i % 100;\n\n  if (j == 1 && k != 11) {\n    return \"st\";\n  }\n\n  if (j == 2 && k != 12) {\n    return \"nd\";\n  }\n\n  if (j == 3 && k != 13) {\n    return \"rd\";\n  }\n\n  return \"th\";\n}\nexport function method(path) {\n  return new jXNumber(path);\n}","map":null,"metadata":{},"sourceType":"module"}